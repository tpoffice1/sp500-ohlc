name: Build yesterday's JSON

on:
  workflow_dispatch:
  schedule:
    - cron: "0 13 * * 1-5"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install yfinance pandas beautifulsoup4 requests

      - name: Ensure tickers.txt (create if <400)
        shell: bash
        run: |
          set -euo pipefail
          n=$(grep -E "^[A-Z]" tickers.txt 2>/dev/null | wc -l || true)
          if [ "$n" -lt 400 ]; then
            echo "tickers.txt missing or too short; writing static S&P500 list"
            cat > tickers.txt <<'EOF'
AAPL
MSFT
GOOGL
AMZN
META
TSLA
BRK.B
JPM
V
UNH
XOM
JNJ
PG
NVDA
HD
MA
BAC
CVX
PFE
KO
PEP
COST
ABBV
AVGO
TMO
WMT
CSCO
ACN
ABT
DHR
MCD
LIN
VZ
ADBE
CRM
NFLX
TXN
HON
PM
INTC
IBM
LOW
AMD
AMAT
SPGI
BLK
GS
RTX
CAT
GE
QCOM
SBUX
DE
AXP
MDT
ISRG
ADP
BKNG
SYK
ELV
LMT
BA
CI
NOW
PLD
ZTS
MO
BDX
USB
SO
MU
PNC
SCHW
CB
CME
CCI
TGT
EQIX
SHW
FISV
MMC
ETN
DUK
APD
GM
REGN
KLAC
# … (add remaining S&P500 tickers here — needs ≥400 lines)
EOF
          fi

      - name: Guard >= 400 tickers
        shell: bash
        run: |
          set -euo pipefail
          n=$(grep -E "^[A-Z]" tickers.txt | wc -l)
          if [ "$n" -lt 400 ]; then
            echo "tickers.txt has only $n symbols; need >=400"
            exit 1
          fi

      - name: Build yesterday's JSON
        run: python fetch_ohlc.py

      - name: Sanity check (try 1)
        run: |
          python - <<'PY'
          import json, pathlib
          data = json.loads(pathlib.Path("data/yesterday.json").read_text())
          rows = len(data)
          print(f"Rows={rows}")
          assert rows >= 400, f"Upstream incomplete: rows={rows}"
          PY

      - name: Retry build after wait (try 2)
        if: failure()
        run: |
          echo "First build incomplete. Waiting 90s and retrying..."
          sleep 90
          python fetch_ohlc.py

      - name: Sanity check (try 2)
        if: always()
        run: |
          python - <<'PY'
          import json, pathlib
          data = json.loads(pathlib.Path("data/yesterday.json").read_text())
          rows = len(data)
          print(f"Rows={rows}")
          assert rows >= 400, f"Upstream incomplete after retry. rows={rows}"
          PY

      - name: Upload bad tickers (if any)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: bad_tickers
          path: build/bad_tickers.txt
          if-no-files-found: ignore

      - name: Commit outputs (only if complete)
        if: success()
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add data/*.json data/*.csv tickers.txt
          git commit -m "build: update aggregates and yesterday.json"
          git push
