name: Build yesterday's JSON

on:
  workflow_dispatch:
  schedule:
    - cron: "15 0 * * 1-5"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Ensure tickers.txt (create/fix if < 400)
        run: |
          python - <<'PY'
          import pathlib

          tickers = [
            "AAPL","MSFT","GOOGL","AMZN","META","BRK.B","TSLA","NVDA","UNH","JNJ",
            "JPM","V","PG","HD","MA","CVX","PFE","KO","PEP","ABBV",
            # …paste the rest of the 500 tickers here…
          ]

          p = pathlib.Path("tickers.txt")
          if p.exists():
              current = [ln.strip() for ln in p.read_text().splitlines() if ln.strip()]
          else:
              current = []

          if len(current) < 400:
              p.write_text("\n".join(tickers) + "\n", encoding="utf-8")
              print(f"tickers.txt refreshed with {len(tickers)} symbols")
          else:
              print(f"tickers.txt already OK ({len(current)} symbols)")
          PY

      - name: Guard >= 400 tickers
        run: |
          n=$(grep -c '^[A-Z]' tickers.txt || true)
          echo "tickers.txt count: $n"
          if [ "$n" -lt 400 ]; then
            echo "::error::tickers.txt has only $n symbols; need >= 400"
            exit 1
          fi

      - name: Build yesterday's JSON
        run: python fetch_ohlc.py

      - name: Sanity check (try 1)
        run: python - <<'PY'
        import json, pathlib
        j = json.loads(pathlib.Path("data/yesterday.json").read_text())
        rows = len(j)
        print(f"rows={rows}")
        assert rows >= 400, f"Upstream incomplete: rows={rows}"
        PY

      - name: Retry build after wait (try 2)
        if: failure()
        run: |
          echo "First build incomplete. Waiting 90s and retrying..."
          sleep 90
          python fetch_ohlc.py

      - name: Sanity check (try 2)
        if: always()
        run: python - <<'PY'
        import json, pathlib
        j = json.loads(pathlib.Path("data/yesterday.json").read_text())
        rows = len(j)
        print(f"rows={rows}")
        assert rows >= 400, f"Upstream incomplete after retry. rows={rows}"
        PY

      - name: Upload bad tickers (if any)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: bad_tickers
          path: build/bad_tickers.txt
          if-no-files-found: ignore

      - name: Commit & push outputs (only if complete)
        if: success()
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add data/latest.csv data/yesterday.json tickers.txt || true
          git commit -m "build: update aggregates and yesterday.json" || echo "Nothing to commit"
          git pull --rebase origin main
          git push

