name: Build yesterday's JSON

on:
  workflow_dispatch:
  schedule:
    - cron: '12 3 * * 1-5'   # run at 03:12 UTC Mon–Fri
  push:
    paths:
      - ".github/workflows/build.yml"
      - "fetch_ohlc.py"
      - "tickers.txt"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Ensure tickers.txt (≥400)
        run: |
          set -e
          cat > tickers.txt <<'EOF'
AAPL
MSFT
AMZN
GOOGL
META
BRK.B
TSLA
UNH
JNJ
JPM
V
PG
NVDA
HD
MA
BAC
XOM
PFE
KO
PEP
DIS
INTC
CSCO
CMCSA
NFLX
ABT
ADBE
CRM
CVX
T
WMT
MCD
NKE
MRK
COST
ABBV
DHR
ACN
AVGO
LIN
TXN
VZ
NEE
WFC
BMY
PM
UPS
HON
LOW
MS
RTX
AMD
IBM
ORCL
AMGN
CAT
SCHW
SBUX
GS
INTU
AXP
MDT
LMT
DE
ISRG
GE
GILD
BKNG
BLK
ZTS
PLD
CVS
MO
AMT
C
CI
SPGI
SYK
ADI
MDLZ
REGN
ADP
NOW
TMUS
MMC
TGT
MU
PNC
CB
EQIX
BDX
FISV
SO
PGR
DUK
ITW
SHW
USB
ICE
CME
FDX
NSC
PSA
HUM
CARR
AON
APD
CL
EL
ETN
EOG
MPC
MAR
ALL
AEP
HCA
PSX
KDP
TRV
DG
MCK
EMR
AIG
OXY
MNST
KMB
PRU
STZ
CNC
D
PSX
WY
ROK
OKE
VLO
PEG
HPQ
...
# (continue list until ≥400 tickers; each one on its own line)
EOF

          rows=$(grep -E '^[A-Z0-9.-]+$' tickers.txt | wc -l)
          echo "tickers.txt count: $rows"
          if [ "$rows" -lt 400 ]; then
            echo "::error::tickers.txt has only $rows symbols; need ≥400"
            exit 1
          fi

      - name: Build yesterday's JSON
        run: python fetch_ohlc.py

      - name: Sanity check (try 1)
        run: |
          python - <<'PY'
          import json, pathlib
          rows = len(json.loads(pathlib.Path("data/yesterday.json").read_text()))
          print(f"Rows={rows}")
          assert rows >= 400, f"Upstream incomplete: rows={rows}"
          PY

      - name: Retry build after wait (try 2)
        if: failure()
        run: |
          echo "First build incomplete. Waiting 90s and retrying..."
          sleep 90
          python fetch_ohlc.py

      - name: Sanity check (try 2)
        if: always()
        run: |
          python - <<'PY'
          import json, pathlib
          rows = len(json.loads(pathlib.Path("data/yesterday.json").read_text()))
          print(f"Rows={rows}")
          assert rows >= 400, f"Upstream incomplete after retry. rows={rows}"
          PY

      - name: Upload bad tickers (if any)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: bad_tickers
          path: build/bad_tickers.txt
          if-no-files-found: ignore

      - name: Commit & push outputs
        if: success()
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add data/latest.csv data/yesterday.json
          git commit -m "build: update aggregates and yesterday.json" || echo "nothing to commit"
          git pull --rebase origin main
          git push origin HEAD:main
