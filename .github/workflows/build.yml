name: Build & Publish OHLC

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  schedule:
    - cron: '15 22 * * 1-5'  # weekdays 22:15 UTC

permissions:
  contents: write

jobs:
  build_publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Sanity check workspace
        run: |
          echo "PWD: $(pwd)"
          ls -la
          [ -f fetch_ohlc.py ] && echo "fetch_ohlc.py OK" || echo "fetch_ohlc.py MISSING"
          [ -f update_tickers.py ] && echo "update_tickers.py OK" || echo "update_tickers.py MISSING"
          [ -f upload_r2_tickers.py ] && echo "upload_r2_tickers.py OK" || echo "upload_r2_tickers.py MISSING"
          [ -f tickers.txt ] && echo "tickers.txt OK" || echo "tickers.txt MISSING"

      - name: Ensure tickers.txt exists at repo root
        run: |
          if [ ! -f tickers.txt ] && [ -f scripts/tickers.txt ]; then
            cp scripts/tickers.txt .
            echo "Copied scripts/tickers.txt -> ./tickers.txt"
          else
            echo "tickers.txt already present OR scripts/tickers.txt missing (no copy)."
          fi

      - name: Fetch OHLC
        run: |
          set -euo pipefail
          python fetch_ohlc.py

      - name: Update tickers metadata (forced tickers path via wrapper)
        env:
          TICKERS_PATH: ${{ github.workspace }}/tickers.txt
        run: |
          set -euo pipefail
          echo "Using TICKERS_PATH=${TICKERS_PATH}"
          printf '%s\n' \
            'import os, importlib.util, runpy' \
            'from pathlib import Path' \
            '' \
            'tickers_file = Path(os.environ["TICKERS_PATH"]).resolve()' \
            'print(f"âœ… Forced tickers path: {tickers_file}")' \
            '' \
            'spec = importlib.util.spec_from_file_location("update_tickers", "update_tickers.py")' \
            'mod = importlib.util.module_from_spec(spec)' \
            'spec.loader.exec_module(mod)' \
            '' \
            'if hasattr(mod, "TICKERS_TXT"):' \
            '    mod.TICKERS_TXT = tickers_file' \
            '' \
            'if hasattr(mod, "main"): ' \
            '    mod.main()' \
            'else:' \
            '    runpy.run_path("update_tickers.py", run_name="__main__")' \
          > update_tickers_wrapper.py
          python update_tickers_wrapper.py

      - name: Upload R2 tickers (optional)
        if: always()
        env:
          R2_ACCOUNT_ID:        ${{ secrets.R2_ACCOUNT_ID }}
          R2_ACCESS_KEY_ID:     ${{ secrets.R2_ACCESS_KEY_ID }}
          R2_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          R2_BUCKET:            ${{ secrets.R2_BUCKET }}
          R2_ENDPOINT_URL:      ${{ secrets.R2_ENDPOINT_URL }}
          R2_PUBLIC_BASE:       ${{ secrets.R2_PUBLIC_BASE }}
        run: |
          set -euo pipefail
          python upload_r2_tickers.py

      - name: Commit & push changes (if any)
        run: |
          set -euo pipefail
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          if ! git diff --cached --quiet; then
            git commit -m "CI: update OHLC $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
            git push
          else
            echo "No changes to commit."
          fi
