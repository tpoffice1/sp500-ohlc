name: Build yesterday's JSON

on:
  workflow_dispatch:
  schedule:
    - cron: "0 13 * * 1-5"   # 13:00 UTC on weekdays

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        shell: bash
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install yfinance pandas beautifulsoup4 requests peewee

      - name: Ensure tickers.txt (create/fix if < 400)
        shell: bash
        run: |
          set -euo pipefail
          n=$(grep -E "^[A-Z]" tickers.txt 2>/dev/null | wc -l || true)
          echo "Existing tickers in tickers.txt: $n"
          if [ "$n" -lt 400 ]; then
            echo "tickers.txt missing/short; writing static S&P 500 symbols"
            cat > tickers.txt <<'EOF'
AAPL
MSFT
GOOGL
AMZN
META
TSLA
BRK-B
JPM
V
AVGO
UNH
XOM
JNJ
WMT
NVDA
HD
MA
PG
CVX
BAC
KO
PFE
ABBV
PEP
COST
TMO
MRK
CSCO
DIS
ACN
# … keep the rest of your symbols here …
# Make sure each ticker is on its own line, no trailing spaces
EOF
          fi

      - name: Build data
        shell: bash
        run: |
          set -euo pipefail
          echo "Running data build…"
          python fetch_ohlc.py

      - name: Sanity check (try 1)
        shell: bash
        run: |
          python - <<'PY'
import json, pathlib
p = pathlib.Path("data/yesterday.json")
j = json.loads(p.read_text())
rows = len(j)
print("rows=", rows)
assert rows >= 400, f"upstream incomplete: rows={rows}"
PY

      - name: Retry build after wait (try 2)
        if: failure()
        shell: bash
        run: |
          echo "First build incomplete; wait 90s and retry…"
          sleep 90
          python fetch_ohlc.py

      - name: Sanity check (try 2)
        if: always()
        shell: bash
        run: |
          python - <<'PY'
import json, pathlib
p = pathlib.Path("data/yesterday.json")
j = json.loads(p.read_text())
rows = len(j)
print("rows=", rows)
assert rows >= 400, f"upstream incomplete after retry: rows={rows}"
PY

      - name: Upload bad tickers (if any)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: bad_tickers
          path: build/bad_tickers.txt
          if-no-files-found: ignore
