name: Build yesterday's JSON

on:
  workflow_dispatch:
  schedule:
    - cron: "0 13 * * 1-5"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        shell: bash
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install yfinance pandas beautifulsoup4 requests

      - name: Ensure tickers.txt (create/fix if < 400)
        shell: bash
        run: |
          set -euo pipefail
          n=$(grep -E "^[A-Z]" tickers.txt 2>/dev/null | wc -l || true)
          echo "Existing tickers in tickers.txt: $n"
          if [ "$n" -lt 400 ]; then
            echo "tickers.txt missing or short; writing static S&P500 list"
            cat > tickers.txt <<'EOF'
AAPL
MSFT
GOOGL
AMZN
META
TSLA
BRK.B
JPM
V
UNH
JNJ
XOM
PG
NVDA
HD
MA
ABBV
CVX
PFE
KO
PEP
BAC
COST
DIS
WMT
NFLX
INTC
CSCO
TMO
AVGO
ADBE
CRM
ACN
CMCSA
TXN
ABT
LIN
NKE
AMD
PM
ORCL
QCOM
NEE
DHR
MCD
LOW
BMY
AMGN
HON
UPS
MS
SCHW
RTX
IBM
CAT
SPGI
BA
GE
GS
PLD
MDT
BLK
DE
INTU
AMAT
NOW
ISRG
BKNG
SYK
ZTS
CVS
C
LRCX
PYPL
ADI
T
MMC
AMT
GILD
ELV
MO
BDX
MDLZ
REGN
ADP
PNC
MU
TJX
SO
VRTX
APD
PGR
CI
CL
WM
ETN
HUM
EOG
DUK
FDX
NSC
KMB
SHW
CB
CSX
CME
USB
ALL
GD
AON
AEP
PH
TRV
MMM
LMT
F
D
KKR
EOF

            n=$(grep -E "^[A-Z]" tickers.txt | wc -l)
            echo "tickers.txt count after write: $n"
            if [ "$n" -lt 400 ]; then
              echo "tickers.txt still too short ($n) — abort." >&2
              exit 2
            fi
          fi

      - name: Build data (non-fatal while we stabilize)
        shell: bash
        run: |
          set -e
          python fetch_ohlc.py || true

      - name: Sanity check JSON (try 1)
        shell: bash
        run: |
          set -e
          python - <<'PY'
import json, pathlib
p = pathlib.Path("data/yesterday.json")
j = json.loads(p.read_text())
rows = len(j)
print("rows=", rows)
assert rows >= 400, f"upstream incomplete: rows={rows}"
PY

      - name: Retry build after wait (try 2)
        if: failure()
        shell: bash
        run: |
          echo "First build incomplete. Waiting 90s and retrying…"
          sleep 90
          python fetch_ohlc.py

      - name: Sanity check (try 2)
        if: always()
        shell: bash
        run: |
          python - <<'PY'
import json, pathlib
p = pathlib.Path("data/yesterday.json")
j = json.loads(p.read_text())
rows = len(j)
print("rows=", rows)
assert rows >= 400, f"upstream incomplete after retry: rows={rows}"
PY

      - name: Commit & push outputs (only if complete)
        shell: bash
        run: |
          set -e
          if ! git diff --quiet -- data/ tickers.txt; then
            git config user.name  "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add data/ tickers.txt
            git commit -m "build: update aggregates and yesterday.json"
            git push origin HEAD:main
          else
            echo "No changes to commit."
          fi
