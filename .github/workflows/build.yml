name: Build & Deploy Tickers

on:
  workflow_dispatch:
  # schedule:
  #   - cron: '15 22 * * 1-5'  # optional: weekdays at 22:15 UTC

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install pandas requests
          fi

      # === Build OHLC data (writes data/yesterday.json, data/latest.csv, raw/*.csv) ===
      # Change this command if your repo uses a different entrypoint.
      - name: Build OHLC artifacts
        run: |
          set -e
          python update_tickers.py
          echo "Built OHLC artifacts:"
          ls -lah data | sed 's/^/  /'
          [ -f data/yesterday.json ] && jq -r '.[0] | keys | @csv' data/yesterday.json || true

      - name: Upload data artifacts (optional)
        uses: actions/upload-artifact@v4
        with:
          name: data-out
          path: |
            data/yesterday.json
            data/latest.csv
            data/raw/*.csv
          if-no-files-found: ignore
          retention-days: 3

      # === Build names & logos (ticker_meta.json) ===
      # NOTE: We do NOT pass FMP_API_KEY here. The script will use the SEC fallback only.
      - name: Build ticker_meta.json (names only via SEC; no FMP)
        run: |
          set -e
          python scripts/build_ticker_meta.py
          echo "Preview ticker_meta.json:"
          head -n 40 data/ticker_meta.json || true

      # Commit outputs back to repo (only if there are changes)
      - name: Commit & push outputs
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A data/*.csv data/*.json data/raw/*.csv tickers.txt || true
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "build: update yesterday.json, latest.csv, ticker_meta.json"
            git push origin HEAD:${{ github.ref_name }}
          fi

      # === Deploy to your site over plain FTP ===
      # Requires secrets: FTP_HOST, FTP_USER, FTP_PASS, FTP_ROOT
      - name: Deploy tickers + meta via FTP
        shell: bash
        env:
          FTP_HOST: ${{ secrets.FTP_HOST }}
          FTP_USER: ${{ secrets.FTP_USER }}
          FTP_PASS: ${{ secrets.FTP_PASS }}
          FTP_ROOT: ${{ secrets.FTP_ROOT }}
        run: |
          set -euo pipefail
          BASE="${FTP_ROOT%/}/wp-content/uploads/data"
          echo "Uploading to ftp://${FTP_HOST}${BASE}"

          # Upload tickers.json (from yesterday.json)
          curl --ftp-create-dirs --ftp-method nocwd --ftp-pasv \
            -T ./data/yesterday.json \
            --user "${FTP_USER}:${FTP_PASS}" \
            "ftp://${FTP_HOST}${BASE}/tickers.json"

          # Upload names (ticker_meta.json)
          curl --ftp-create-dirs --ftp-method nocwd --ftp-pasv \
            -T ./data/ticker_meta.json \
            --user "${FTP_USER}:${FTP_PASS}" \
            "ftp://${FTP_HOST}${BASE}/ticker_meta.json"

          echo "Deployed tickers.json and ticker_meta.json"
