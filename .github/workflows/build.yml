name: Build yesterday's JSON

on:
  workflow_dispatch:
  schedule:
    - cron: "0 13 * * 1-5"  # 13:00 UTC on weekdays

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        shell: bash
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          # Minimal runtime requirements for fetch_ohlc.py
          pip install yfinance pandas requests numpy

      ####################################################################
      # NO WIKIPEDIA SCRAPE. Pull the S&P 500 list from a public CSV.
      ####################################################################
      - name: Refresh S&P 500 tickers (from GitHub CSV; no scraping)
        shell: bash
        run: |
          set -euo pipefail

          have=$(grep -E '^[A-Za-z0-9.-]+' -c tickers.txt 2>/dev/null || echo 0)
          if [ "${have}" -lt 400 ]; then
            echo "Fetching S&P 500 constituents CSV…"
            tmp=$(mktemp)
            if curl -fsSL https://raw.githubusercontent.com/datasets/s-and-p-500/master/data/constituents.csv -o "${tmp}"; then
              true
            else
              echo "Primary source failed; trying jsDelivr mirror…"
              curl -fsSL https://cdn.jsdelivr.net/gh/datasets/s-and-p-500@master/data/constituents.csv -o "${tmp}"
            fi

            # Column 1 is the ticker symbol. Remove quotes, keep non-empty.
            tail -n +2 "${tmp}" | cut -d',' -f1 | tr -d '"' | grep -E '^[A-Za-z0-9.-]+' > tickers.txt
            rm -f "${tmp}"
          fi

          count=$(grep -E '^[A-Za-z0-9.-]+' -c tickers.txt 2>/dev/null || echo 0)
          echo "tickers.txt count: ${count}"
          if [ "${count}" -lt 400 ]; then
            echo "::error::Still fewer than 400 tickers after refresh; aborting."
            exit 1
          fi

      ####################################################################
      # Build the OHLC snapshot using your script
      ####################################################################
      - name: Build data (try 1)
        shell: bash
        run: |
          set -euo pipefail
          python fetch_ohlc.py

      - name: Sanity (try 1)
        shell: bash
        run: |
          set -euo pipefail
          python - <<'PY'
import json, pathlib, sys
p = pathlib.Path("data/yesterday.json")
if not p.exists():
    print("rows=0 (file missing)")
    sys.exit(1)
data = json.loads(p.read_text())
rows = len(data) if isinstance(data, list) else 0
print("rows=", rows)
sys.exit(0 if rows > 0 else 1)
PY

      - name: Retry build (try 2)
        if: failure()          # only if previous sanity failed
        shell: bash
        run: |
          echo "Retrying after 90s…"
          sleep 90
          python fetch_ohlc.py

      - name: Sanity (try 2)
        if: always()
        shell: bash
        run: |
          python - <<'PY'
import json, pathlib, sys
p = pathlib.Path("data/yesterday.json")
if not p.exists():
    print("rows=0 (file missing)")
    sys.exit(1)
data = json.loads(p.read_text())
rows = len(data) if isinstance(data, list) else 0
print("rows=", rows)
sys.exit(0 if rows > 0 else 1)
PY

      - name: Upload bad_tickers (if any)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: bad_tickers
          path: build/bad_tickers.txt
          if-no-files-found: ignore

      ####################################################################
      # Commit only if the run is successful (rows > 0)
      ####################################################################
      - name: Commit & push outputs (only if complete)
        if: success()
        uses: EndBug/add-and-commit@v9
        with:
          add: |
            data/latest.csv
            data/yesterday.json
            tickers.txt
            build/bad_tickers.txt
          message: "build: update aggregates and yesterday.json"
          default_author: github_actions
