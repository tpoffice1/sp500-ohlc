name: Build & Deploy Tickers (FTP)

on:
  workflow_dispatch:
  schedule:
    - cron: "45 22 * * 1-5"  # weekdays @ 22:45 UTC

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt

      # Produces data/yesterday.json and data/latest.csv
      - name: Build OHLC artifacts
        shell: bash
        run: |
          set -euo pipefail
          python update_tickers.py

      - name: Commit & push outputs
        shell: bash
        run: |
          set -e
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add data/yesterday.json data/latest.csv || true
          git commit -m "build: update yesterday.json & latest.csv" || echo "No changes"
          git push origin HEAD:main || echo "Push skipped"

      # Plain FTP upload (port 21). Overwrites ONE canonical file on your site.
      - name: Deploy tickers.json to site via FTP
        shell: bash
        env:
          FTP_HOST: ${{ secrets.FTP_HOST }}   # ftpupload.net or your server IP
          FTP_USER: ${{ secrets.FTP_USER }}
          FTP_PASS: ${{ secrets.FTP_PASS }}
          FTP_ROOT: ${{ secrets.FTP_ROOT }}   # /tptxdev.com/htdocs
        run: |
          set -euo pipefail
          REMOTE_PATH="${FTP_ROOT%/}/wp-content/uploads/data/tickers.json"
          echo "Uploading to ftp://${FTP_HOST}${REMOTE_PATH}"
          # --ftp-create-dirs creates folders
          # --ftp-method nocwd helps some shared hosts
          # --ftp-pasv uses passive mode (works best on this host)
          curl --ftp-create-dirs --ftp-method nocwd --ftp-pasv \
            -T ./data/yesterday.json \
            --user "${FTP_USER}:${FTP_PASS}" \
            "ftp://${FTP_HOST}${REMOTE_PATH}"
